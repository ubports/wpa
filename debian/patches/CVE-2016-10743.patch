From 98a516eae8260e6fd5c48ddecf8d006285da7389 Mon Sep 17 00:00:00 2001
From: Nick Lowe <nick.lowe@lugatech.com>
Date: Tue, 9 Feb 2016 14:47:47 +0000
Subject: WPS: Use only os_get_random() for PIN generation

Remove the fallback dependency on os_random() when generating a WPS pin.
This is exceptionally unlikely to ever be called as the call to
os_get_random() is unlikely to fail. The intention is to facilitate
future removal of os_random() as it uses a low quality PRNG.

Signed-off-by: Nick Lowe <nick.lowe@lugatech.com>
---
 src/ap/wps_hostapd.c            |  3 ++-
 src/wps/wps.h                   |  2 +-
 src/wps/wps_common.c            | 12 +++++-------
 wpa_supplicant/ap.c             |  8 ++++++--
 wpa_supplicant/ctrl_iface.c     |  3 ++-
 wpa_supplicant/p2p_supplicant.c | 19 ++++++++++++++++---
 wpa_supplicant/wps_supplicant.c |  5 ++++-
 7 files changed, 36 insertions(+), 16 deletions(-)

Index: wpa-2.4/src/ap/wps_hostapd.c
===================================================================
--- wpa-2.4.orig/src/ap/wps_hostapd.c	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/src/ap/wps_hostapd.c	2019-04-09 07:29:34.446114229 -0400
@@ -1561,7 +1561,8 @@ const char * hostapd_wps_ap_pin_random(s
 	unsigned int pin;
 	struct wps_ap_pin_data data;
 
-	pin = wps_generate_pin();
+	if (wps_generate_pin(&pin) < 0)
+		return NULL;
 	os_snprintf(data.pin_txt, sizeof(data.pin_txt), "%08u", pin);
 	data.timeout = timeout;
 	hostapd_wps_for_each(hapd, wps_ap_pin_set, &data);
Index: wpa-2.4/src/wps/wps.h
===================================================================
--- wpa-2.4.orig/src/wps/wps.h	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/src/wps/wps.h	2019-04-09 07:29:34.446114229 -0400
@@ -826,7 +826,7 @@ int wps_build_credential_wrap(struct wpa
 
 unsigned int wps_pin_checksum(unsigned int pin);
 unsigned int wps_pin_valid(unsigned int pin);
-unsigned int wps_generate_pin(void);
+int wps_generate_pin(unsigned int *pin);
 int wps_pin_str_valid(const char *pin);
 void wps_free_pending_msgs(struct upnp_pending_message *msgs);
 
Index: wpa-2.4/src/wps/wps_common.c
===================================================================
--- wpa-2.4.orig/src/wps/wps_common.c	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/src/wps/wps_common.c	2019-04-09 07:29:34.446114229 -0400
@@ -235,20 +235,18 @@ unsigned int wps_pin_valid(unsigned int
  * wps_generate_pin - Generate a random PIN
  * Returns: Eight digit PIN (i.e., including the checksum digit)
  */
-unsigned int wps_generate_pin(void)
+int wps_generate_pin(unsigned int *pin)
 {
 	unsigned int val;
 
 	/* Generate seven random digits for the PIN */
-	if (random_get_bytes((unsigned char *) &val, sizeof(val)) < 0) {
-		struct os_time now;
-		os_get_time(&now);
-		val = os_random() ^ now.sec ^ now.usec;
-	}
+	if (random_get_bytes((unsigned char *) &val, sizeof(val)) < 0)
+		return -1;
 	val %= 10000000;
 
 	/* Append checksum digit */
-	return val * 10 + wps_pin_checksum(val);
+	*pin = val * 10 + wps_pin_checksum(val);
+	return 0;
 }
 
 
Index: wpa-2.4/wpa_supplicant/ap.c
===================================================================
--- wpa-2.4.orig/wpa_supplicant/ap.c	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/wpa_supplicant/ap.c	2019-04-09 07:29:34.446114229 -0400
@@ -836,7 +836,10 @@ int wpa_supplicant_ap_wps_pin(struct wpa
 		return -1;
 
 	if (pin == NULL) {
-		unsigned int rpin = wps_generate_pin();
+		unsigned int rpin;
+
+		if (wps_generate_pin(&rpin) < 0)
+			return -1;
 		ret_len = os_snprintf(buf, buflen, "%08d", rpin);
 		if (os_snprintf_error(buflen, ret_len))
 			return -1;
@@ -902,7 +905,8 @@ const char * wpas_wps_ap_pin_random(stru
 	if (wpa_s->ap_iface == NULL)
 		return NULL;
 	hapd = wpa_s->ap_iface->bss[0];
-	pin = wps_generate_pin();
+	if (wps_generate_pin(&pin) < 0)
+		return NULL;
 	os_snprintf(pin_txt, sizeof(pin_txt), "%08u", pin);
 	os_free(hapd->conf->ap_pin);
 	hapd->conf->ap_pin = os_strdup(pin_txt);
Index: wpa-2.4/wpa_supplicant/ctrl_iface.c
===================================================================
--- wpa-2.4.orig/wpa_supplicant/ctrl_iface.c	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/wpa_supplicant/ctrl_iface.c	2019-04-09 07:29:34.446114229 -0400
@@ -893,7 +893,8 @@ static int wpa_supplicant_ctrl_iface_wps
 	if (os_strcmp(cmd, "any") == 0)
 		_bssid = NULL;
 	else if (os_strcmp(cmd, "get") == 0) {
-		ret = wps_generate_pin();
+		if (wps_generate_pin((unsigned int *) &ret) < 0)
+			return -1;
 		goto done;
 	} else if (hwaddr_aton(cmd, bssid)) {
 		wpa_printf(MSG_DEBUG, "CTRL_IFACE WPS_PIN: invalid BSSID '%s'",
Index: wpa-2.4/wpa_supplicant/p2p_supplicant.c
===================================================================
--- wpa-2.4.orig/wpa_supplicant/p2p_supplicant.c	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/wpa_supplicant/p2p_supplicant.c	2019-04-09 07:29:34.450114237 -0400
@@ -3671,7 +3671,13 @@ static void wpas_prov_disc_req(void *ctx
 	params[sizeof(params) - 1] = '\0';
 
 	if (config_methods & WPS_CONFIG_DISPLAY) {
-		generated_pin = wps_generate_pin();
+		if (wps_generate_pin(&generated_pin) < 0) {
+			wpa_printf(MSG_DEBUG, "P2P: Could not generate PIN");
+			wpas_notify_p2p_provision_discovery(
+				wpa_s, peer, 0 /* response */,
+				P2P_PROV_DISC_INFO_UNAVAILABLE, 0, 0);
+			return;
+		}
 		wpas_prov_disc_local_display(wpa_s, peer, params,
 					     generated_pin);
 	} else if (config_methods & WPS_CONFIG_KEYPAD)
@@ -3716,7 +3722,13 @@ static void wpas_prov_disc_resp(void *ct
 	if (config_methods & WPS_CONFIG_DISPLAY)
 		wpas_prov_disc_local_keypad(wpa_s, peer, params);
 	else if (config_methods & WPS_CONFIG_KEYPAD) {
-		generated_pin = wps_generate_pin();
+		if (wps_generate_pin(&generated_pin) < 0) {
+			wpa_printf(MSG_DEBUG, "P2P: Could not generate PIN");
+			wpas_notify_p2p_provision_discovery(
+				wpa_s, peer, 0 /* response */,
+				P2P_PROV_DISC_INFO_UNAVAILABLE, 0, 0);
+			return;
+		}
 		wpas_prov_disc_local_display(wpa_s, peer, params,
 					     generated_pin);
 	} else if (config_methods & WPS_CONFIG_PUSHBUTTON)
@@ -6065,7 +6077,8 @@ int wpas_p2p_connect(struct wpa_supplica
 	if (pin)
 		os_strlcpy(wpa_s->p2p_pin, pin, sizeof(wpa_s->p2p_pin));
 	else if (wps_method == WPS_PIN_DISPLAY) {
-		ret = wps_generate_pin();
+		if (wps_generate_pin((unsigned int *) &ret) < 0)
+			return -1;
 		res = os_snprintf(wpa_s->p2p_pin, sizeof(wpa_s->p2p_pin),
 				  "%08d", ret);
 		if (os_snprintf_error(sizeof(wpa_s->p2p_pin), res))
Index: wpa-2.4/wpa_supplicant/wps_supplicant.c
===================================================================
--- wpa-2.4.orig/wpa_supplicant/wps_supplicant.c	2019-04-09 07:29:34.450114237 -0400
+++ wpa-2.4/wpa_supplicant/wps_supplicant.c	2019-04-09 07:29:34.450114237 -0400
@@ -1195,7 +1195,10 @@ static int wpas_wps_start_dev_pw(struct
 		os_snprintf(val, sizeof(val), "\"dev_pw_id=%u%s\"",
 			    dev_pw_id, hash);
 	} else {
-		rpin = wps_generate_pin();
+		if (wps_generate_pin(&rpin) < 0) {
+			wpa_printf(MSG_DEBUG, "WPS: Could not generate PIN");
+			return -1;
+		}
 		os_snprintf(val, sizeof(val), "\"pin=%08d dev_pw_id=%u%s\"",
 			    rpin, dev_pw_id, hash);
 	}
