From: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
Subject: Add SetInterfaceFirmware method for hybris firmware changes

Allow system services to request a firmware mode change for hybris devices
from wpasupplicant; this is used on some Android devices to enable AP mode
or Wifi-Direct/P2P support.

---
 wpa_supplicant/Makefile                 |    5 +
 wpa_supplicant/dbus/Makefile            |    5 +
 wpa_supplicant/dbus/dbus_new.c          |   10 +++
 wpa_supplicant/dbus/dbus_new_handlers.c |   92 ++++++++++++++++++++++++++++++++
 wpa_supplicant/dbus/dbus_new_handlers.h |    3 +
 5 files changed, 115 insertions(+)

Index: wpa/wpa_supplicant/dbus/dbus_new.c
===================================================================
--- wpa.orig/wpa_supplicant/dbus/dbus_new.c
+++ wpa/wpa_supplicant/dbus/dbus_new.c
@@ -2039,6 +2039,16 @@ static const struct wpa_dbus_method_desc
 		  END_ARGS
 	  }
 	},
+#ifdef CONFIG_ANDROID_HAL
+	{ "SetInterfaceFirmware", WPAS_DBUS_NEW_INTERFACE,
+	  (WPADBusMethodHandler) &wpas_dbus_handler_set_interface_firmware,
+	  {
+		  { "path", "o", ARG_IN },
+		  { "firmware", "s", ARG_IN },
+		  END_ARGS
+	  }
+	},
+#endif /* CONFIG_ANDROID_HAL */
 	{ "RemoveInterface", WPAS_DBUS_NEW_INTERFACE,
 	  (WPADBusMethodHandler) wpas_dbus_handler_remove_interface,
 	  {
Index: wpa/wpa_supplicant/dbus/dbus_new_handlers.c
===================================================================
--- wpa.orig/wpa_supplicant/dbus/dbus_new_handlers.c
+++ wpa/wpa_supplicant/dbus/dbus_new_handlers.c
@@ -632,6 +632,65 @@ oom:
 	goto out;
 }
 
+#ifdef CONFIG_ANDROID_HAL
+/**
+ * wpas_dbus_handler_set_interface_firmware - Change firmware for interface
+ * @message: Pointer to incoming dbus message
+ * @global: %wpa_supplicant global data structure
+ * Returns: a dbus message containing a UINT32 indicating success (1) or
+ *          failure (0), or returns a dbus error message with more information
+ *
+ * Handler function for "SetInterfaceFirmware" method call. Handles requests
+ * by dbus clients to set a different firmware mode for an interface.
+ */
+DBusMessage * wpas_dbus_handler_set_interface_firmware(DBusMessage *message,
+						       struct wpa_global *global)
+{
+	DBusMessageIter iter_dict;
+	DBusMessage *reply = NULL;
+	DBusMessageIter iter;
+	void *libwifi;
+	const char *iface, *firmware, *path;
+	int res = 0;
+	FILE *f = NULL;
+
+	if (!dbus_message_get_args(message, NULL,
+	                           DBUS_TYPE_OBJECT_PATH, &iface,
+	                           DBUS_TYPE_STRING, &firmware,
+			           DBUS_TYPE_INVALID))
+		return wpas_dbus_error_invalid_args(message, NULL);
+
+	if (os_strcasecmp(firmware, "sta") != 0
+		&& os_strcasecmp(firmware, "ap") != 0)
+		&& os_strcasecmp(firmware, "p2p") != 0)) {
+		reply = wpas_dbus_error_invalid_args(
+			message, "wpa_supplicant couldn't recognize the "
+			"firmware mode string. Valid options are: "
+		        "ap, sta, p2p");
+		goto out;
+	}
+
+	f = fopen(WIFI_DRIVER_FW_PATH_PARAM, "w");
+	if (!f) {
+		reply = wpas_dbus_error_unknown_error(
+			message, "wpa_supplicant couldn't open the "
+			"firmware path. Please check the permissions";
+		goto out;
+	}
+
+	setvbuf (f, NULL, _IONBF, 0);
+	res = fprintf(f, "%s", firmware);
+	if (res != strlen(firmware) || ferror(f)) {
+		reply = wpas_dbus_error_unknown_error(
+			message, "The wireless device mode change "
+			"failed.");
+	}
+	fclose(f);
+
+out:
+	return reply;
+}
+#endif /* CONFIG_ANDROID_HAL */
 
 /**
  * wpas_dbus_handler_remove_interface - Request deregistration of an interface
Index: wpa/wpa_supplicant/dbus/dbus_new_handlers.h
===================================================================
--- wpa.orig/wpa_supplicant/dbus/dbus_new_handlers.h
+++ wpa/wpa_supplicant/dbus/dbus_new_handlers.h
@@ -10,6 +10,10 @@
 #ifndef CTRL_IFACE_DBUS_NEW_HANDLERS_H
 #define CTRL_IFACE_DBUS_NEW_HANDLERS_H
 
+#ifdef CONFIG_ANDROID_HAL
+#define WIFI_DRIVER_FW_PATH_PARAM "/sys/module/wlan/parameters/fwpath"
+#endif
+
 struct network_handler_args {
 	struct wpa_supplicant *wpa_s;
 	struct wpa_ssid *ssid;
@@ -49,6 +53,9 @@ dbus_bool_t wpas_dbus_simple_array_array
 DBusMessage * wpas_dbus_handler_create_interface(DBusMessage *message,
 						 struct wpa_global *global);
 
+DBusMessage * wpas_dbus_handler_set_interface_firmware(DBusMessage *message,
+						       struct wpa_global *global);
+
 DBusMessage * wpas_dbus_handler_remove_interface(DBusMessage *message,
 						 struct wpa_global *global);
 
Index: wpa/wpa_supplicant/dbus/Makefile
===================================================================
--- wpa.orig/wpa_supplicant/dbus/Makefile
+++ wpa/wpa_supplicant/dbus/Makefile
@@ -67,6 +67,10 @@ LIB_OBJS += dbus_old_handlers_wps.o
 LIB_OBJS += dbus_new_handlers_wps.o
 endif
 
+ifdef CONFIG_ANDROID_HAL
+CFLAGS += -DCONFIG_ANDROID_HAL
+endif
+
 libwpadbus.a: $(LIB_OBJS)
 	$(AR) crT $@ $?
 
Index: wpa/wpa_supplicant/Makefile
===================================================================
--- wpa.orig/wpa_supplicant/Makefile
+++ wpa/wpa_supplicant/Makefile
@@ -1586,6 +1586,10 @@ EXTRALIBS += WbemUuid.Lib
 endif
 endif
 
+ifdef CONFIG_ANDROID_HAL
+CFLAGS += -DCONFIG_ANDROID_HAL
+endif
+
 ifndef LDO
 LDO=$(CC)
 endif
